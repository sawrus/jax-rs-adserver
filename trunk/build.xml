<?xml version="1.0" encoding="UTF-8"?>
<project name="adserver" default="all">
  
  
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="128m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/*.lib/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/.bundle/**"/>
    <exclude name="**/*.rbc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.ear"/>
    <include name="*.apk"/>
    <include name="*.zip"/>
    <include name="*.swc"/>
    <include name="*.ane"/>
    <include name="*.egg"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <include name="**/?*.properties"/>
    <include name="**/?*.xml"/>
    <include name="**/?*.gif"/>
    <include name="**/?*.png"/>
    <include name="**/?*.jpeg"/>
    <include name="**/?*.jpg"/>
    <include name="**/?*.html"/>
    <include name="**/?*.dtd"/>
    <include name="**/?*.tld"/>
    <include name="**/?*.ftl"/>
  </patternset>
  
  <!-- Project Libraries -->
  
  <path id="library.restful_web_services-restful_web_services.classpath">
    <pathelement location="${basedir}/lib/FastInfoset-1.2.12.jar"/>
    <pathelement location="${basedir}/lib/activation-1.1.1.jar"/>
    <pathelement location="${basedir}/lib/asm-3.3.1.jar"/>
    <pathelement location="${basedir}/lib/grizzly-servlet-webserver-1.9.36.jar"/>
    <pathelement location="${basedir}/lib/jackson-core-asl-1.8.3.jar"/>
    <pathelement location="${basedir}/lib/jackson-jaxrs-1.8.3.jar"/>
    <pathelement location="${basedir}/lib/jackson-mapper-asl-1.8.3.jar"/>
    <pathelement location="${basedir}/lib/jaxb-api-2.2.4.jar"/>
    <pathelement location="${basedir}/lib/jaxb-impl-2.2.4-1.jar"/>
    <pathelement location="${basedir}/lib/jdom-1.0.jar"/>
    <pathelement location="${basedir}/lib/jersey-bundle-1.10.jar"/>
    <pathelement location="${basedir}/lib/jersey-core-1.10.jar"/>
    <pathelement location="${basedir}/lib/jersey-grizzly-1.10.jar"/>
    <pathelement location="${basedir}/lib/jersey-multipart-1.10.jar"/>
    <pathelement location="${basedir}/lib/jettison-1.1.jar"/>
    <pathelement location="${basedir}/lib/localizer.jar"/>
    <pathelement location="${basedir}/lib/mail-1.4.4.jar"/>
    <pathelement location="${basedir}/lib/mimepull-1.3.jar"/>
    <pathelement location="${basedir}/lib/persistence-api-1.0.2.jar"/>
    <pathelement location="${basedir}/lib/rome-1.0.jar"/>
    <pathelement location="${basedir}/lib/stax-api-1.0-2.jar"/>
    <pathelement location="${basedir}/lib/wadl-cmdline.jar"/>
    <pathelement location="${basedir}/lib/wadl-core.jar"/>
    <pathelement location="${basedir}/lib/wadl2java.jar"/>
    <pathelement location="${basedir}/lib/tuscany-json-nodep-2.0-M5.1.jar"/>
  </path>
  
  <!-- Modules -->
  
  
  <!-- Module adserver -->
  
  <dirname property="module.adserver.basedir" file="${ant.file}"/>
  
  <property name="compiler.args.adserver" value="${compiler.args}"/>
  
  <property name="adserver.output.dir" value="${module.adserver.basedir}/out/production/adserver"/>
  <property name="adserver.testoutput.dir" value="${module.adserver.basedir}/out/test/adserver"/>
  
  <path id="adserver.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="adserver.module.production.classpath">
    <path refid="library.restful_web_services-restful_web_services.classpath"/>
  </path>
  
  <path id="adserver.runtime.production.module.classpath">
    <pathelement location="${adserver.output.dir}"/>
    <path refid="library.restful_web_services-restful_web_services.classpath"/>
  </path>
  
  <path id="adserver.module.classpath">
    <pathelement location="${adserver.output.dir}"/>
    <path refid="library.restful_web_services-restful_web_services.classpath"/>
  </path>
  
  <path id="adserver.runtime.module.classpath">
    <pathelement location="${adserver.testoutput.dir}"/>
    <pathelement location="${adserver.output.dir}"/>
    <path refid="library.restful_web_services-restful_web_services.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.adserver">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.adserver">
    <patternset refid="excluded.from.module.adserver"/>
  </patternset>
  
  <path id="adserver.module.sourcepath">
    <dirset dir="${module.adserver.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.adserver" depends="compile.module.adserver.production,compile.module.adserver.tests" description="Compile module adserver"/>
  
  <target name="compile.module.adserver.production" description="Compile module adserver; production classes">
    <mkdir dir="${adserver.output.dir}"/>
    <javac destdir="${adserver.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.adserver}"/>
      <bootclasspath refid="adserver.module.bootclasspath"/>
      <classpath refid="adserver.module.production.classpath"/>
      <src refid="adserver.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.adserver"/>
    </javac>
    
    <copy todir="${adserver.output.dir}">
      <fileset dir="${module.adserver.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.adserver.tests" depends="compile.module.adserver.production" description="compile module adserver; test classes" unless="skip.tests"/>
  
  <target name="clean.module.adserver" description="cleanup module">
    <delete dir="${adserver.output.dir}"/>
    <delete dir="${adserver.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.adserver, clean.artifact.adserver:war_exploded" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.adserver" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.adserver:war_exploded" value="${basedir}/out/artifacts/adserver_war_exploded"/>
    <mkdir dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="clean.artifact.adserver:war_exploded" description="clean adserver:war exploded artifact output">
    <delete dir="${basedir}/out/artifacts/adserver_war_exploded"/>
  </target>
  
  <target name="artifact.adserver:war_exploded" depends="init.artifacts, compile.module.adserver" description="Build &#39;adserver:war exploded&#39; artifact">
    <mkdir dir="${artifact.output.adserver:war_exploded}"/>
    <copy todir="${artifact.output.adserver:war_exploded}">
      <fileset dir="${basedir}/web"/>
    </copy>
    <mkdir dir="${artifact.output.adserver:war_exploded}/WEB-INF"/>
    <copy file="${basedir}/web/WEB-INF/web.xml" tofile="${artifact.output.adserver:war_exploded}/WEB-INF/web.xml"/>
    <mkdir dir="${artifact.output.adserver:war_exploded}/WEB-INF"/>
    <mkdir dir="${artifact.output.adserver:war_exploded}/WEB-INF/classes"/>
    <copy todir="${artifact.output.adserver:war_exploded}/WEB-INF/classes">
      <fileset dir="${adserver.output.dir}"/>
    </copy>
    <mkdir dir="${artifact.output.adserver:war_exploded}/WEB-INF/lib"/>
    <copy todir="${artifact.output.adserver:war_exploded}/WEB-INF/lib">
      <fileset dir="${basedir}/lib"/>
    </copy>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.adserver:war_exploded" description="Build all artifacts">
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>

  <target name="build.jar" depends="build.modules" description="Build ${ant.project.name}.jar">
    <jar destfile="${basedir}/${ant.project.name}.jar">
        <fileset dir="${adserver.output.dir}">
            <include name="**/*.class"/>
            <include name="**/*.properties"/>
            <exclude name="**/CVS"/>
        </fileset>
    </jar>
  </target>

  <target name="build.war" depends="init, clean, build.all.artifacts" description="Build ${ant.project.name}.war"> 
    <war destfile="${basedir}/${ant.project.name}.war" duplicate="preserve" webxml="${artifact.output.adserver:war_exploded}/WEB-INF/web.xml">
	<fileset dir="${artifact.output.adserver:war_exploded}"/>
	<lib dir="${artifact.output.adserver:war_exploded}/WEB-INF/lib"/>
	<classes dir="${artifact.output.adserver:war_exploded}/WEB-INF/classes"/>
    </war>
  </target>

  <target name="war" depends="build.war" description="build war"/>
</project>
